class Solution:
    def numMagicSquaresInside(self, grid: List[List[int]]) -> int:
        l = len(grid)
        h = len(grid[0])
        sum = 0
        for i in range(1, l - 1):
            for j in range(1, h - 1):
                if grid[i][j] == 5:
                    temp = [0, 0, 0, 0, 0, 0, 0, 0, 0]
                    for m in range(-1, 2):
                        for n in range(-1, 2):
                            if 0 < grid[i + m][j + n] < 10:
                                temp[grid[i + m][j + n] - 1] = 1
                    print(temp)
                    flag = 1
                    for num in temp:
                        flag = flag * num           
                    a = grid[i - 1][j - 1] + grid[i][j - 1] + grid[i + 1][j - 1]
                    if a == 15:
                        b = grid[i - 1][j - 1] + grid[i - 1][j] + grid[i - 1][j + 1]
                        if b == 15:
                            c = grid[i - 1][j + 1] + grid[i][j + 1] + grid[i + 1][j + 1]
                            if c == 15:
                                d = grid[i - 1][j - 1] + grid[i + 1][j + 1]
                                if d == 10:
                                    sum = sum + 1 * flag
        return sum
        

                
        
